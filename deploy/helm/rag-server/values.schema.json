{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "NVIDIA RAG Blueprint Helm Chart Values",
  "description": "Configuration values for the NVIDIA RAG Blueprint deployment",
  "properties": {
    "appName": {
      "type": "string",
      "description": "Application name for the RAG server",
      "default": "rag-server",
      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
    },
    "namespace": {
      "type": "string",
      "description": "Kubernetes namespace for deployment",
      "default": "nv-nvidia-blueprint-rag",
      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
    },
    "replicaCount": {
      "type": "integer",
      "description": "Number of replicas for the RAG server",
      "minimum": 1,
      "maximum": 10,
      "default": 1
    },
    "platform": {
      "type": "object",
      "description": "Platform-specific configuration",
      "properties": {
        "type": {
          "type": "string",
          "description": "Platform type (kubernetes or openshift)",
          "enum": ["kubernetes", "openshift"],
          "default": "kubernetes"
        }
      }
    },
    "image": {
      "type": "object",
      "description": "RAG server container image configuration",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Container image repository",
          "default": "nvcr.io/nvidia/blueprint/rag-server"
        },
        "tag": {
          "type": "string",
          "description": "Container image tag",
          "default": "2.2.0"
        },
        "pullPolicy": {
          "type": "string",
          "description": "Image pull policy",
          "enum": ["Always", "IfNotPresent", "Never"],
          "default": "Always"
        }
      },
      "required": ["repository", "tag"]
    },
    "imagePullSecret": {
      "type": "object",
      "description": "Image pull secret configuration",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the image pull secret",
          "default": "ngc-secret"
        },
        "registry": {
          "type": "string",
          "description": "Container registry URL",
          "default": "nvcr.io"
        },
        "username": {
          "type": "string",
          "description": "Registry username",
          "default": "$oauthtoken"
        },
        "password": {
          "type": "string",
          "description": "Registry password or token"
        },
        "create": {
          "type": "boolean",
          "description": "Whether to create the image pull secret",
          "default": true
        }
      }
    },
    "resources": {
      "type": "object",
      "description": "Resource requirements for the RAG server",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K|$)",
              "description": "Memory limit"
            },
            "cpu": {
              "type": ["string", "number"],
              "description": "CPU limit"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K|$)",
              "description": "Memory request"
            },
            "cpu": {
              "type": ["string", "number"],
              "description": "CPU request"
            }
          }
        }
      }
    },
    "securityContext": {
      "type": "object",
      "description": "Security context for containers",
      "properties": {
        "runAsNonRoot": {
          "type": "boolean",
          "description": "Run as non-root user",
          "default": true
        },
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "description": "Allow privilege escalation",
          "default": false
        }
      }
    },
    "envVars": {
      "type": "object",
      "description": "Environment variables for the RAG server",
      "properties": {
        "MINIO_ENDPOINT": {
          "type": "string",
          "description": "MinIO endpoint URL",
          "default": "rag-minio:9000"
        },
        "APP_VECTORSTORE_URL": {
          "type": "string",
          "description": "Vector database URL",
          "default": "http://milvus:19530"
        },
        "APP_VECTORSTORE_NAME": {
          "type": "string",
          "description": "Vector database type",
          "enum": ["milvus"],
          "default": "milvus"
        },
        "APP_LLM_MODELNAME": {
          "type": "string",
          "description": "LLM model name",
          "default": "nvidia/llama-3.3-nemotron-super-49b-v1"
        },
        "ENABLE_RERANKER": {
          "type": "string",
          "description": "Enable reranking functionality",
          "enum": ["True", "False"],
          "default": "True"
        },
        "ENABLE_GUARDRAILS": {
          "type": "string",
          "description": "Enable guardrails functionality",
          "enum": ["True", "False"],
          "default": "False"
        },
        "LOGLEVEL": {
          "type": "string",
          "description": "Logging level",
          "enum": ["DEBUG", "INFO", "WARN", "ERROR", "CRITICAL"],
          "default": "INFO"
        }
      }
    },
    "frontend": {
      "type": "object",
      "description": "Frontend configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable frontend deployment",
          "default": true
        },
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string",
              "description": "Frontend image repository",
              "default": "nvcr.io/nvidia/blueprint/rag-playground"
            },
            "tag": {
              "type": "string",
              "description": "Frontend image tag",
              "default": "2.2.0"
            }
          }
        },
        "route": {
          "type": "object",
          "description": "OpenShift Route configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable OpenShift Route",
              "default": false
            },
            "host": {
              "type": "string",
              "description": "Route hostname"
            }
          }
        },
        "ingress": {
          "type": "object",
          "description": "Kubernetes Ingress configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable Kubernetes Ingress",
              "default": false
            }
          }
        }
      }
    },
    "ingestor-server": {
      "type": "object",
      "description": "Ingestor server configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable ingestor server deployment",
          "default": true
        },
        "replicaCount": {
          "type": "integer",
          "description": "Number of replicas for ingestor server",
          "minimum": 1,
          "maximum": 5,
          "default": 1
        }
      }
    },
    "nim-llm": {
      "type": "object",
      "description": "NVIDIA NIM LLM configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable NIM LLM deployment",
          "default": false
        }
      }
    },
    "nvidia-nim-llama-32-nv-embedqa-1b-v2": {
      "type": "object",
      "description": "NVIDIA NIM Embedding model configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable embedding model deployment",
          "default": false
        }
      }
    },
    "text-reranking-nim": {
      "type": "object",
      "description": "Text reranking NIM configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable text reranking deployment",
          "default": false
        }
      }
    },
    "zipkin": {
      "type": "object",
      "description": "Zipkin tracing configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Zipkin deployment",
          "default": false
        }
      }
    },
    "opentelemetry-collector": {
      "type": "object",
      "description": "OpenTelemetry collector configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable OpenTelemetry collector",
          "default": false
        }
      }
    },
    "kube-prometheus-stack": {
      "type": "object",
      "description": "Prometheus monitoring stack",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Prometheus stack",
          "default": false
        }
      }
    }
  },
  "required": [
    "appName",
    "namespace"
  ],
  "additionalProperties": true
}